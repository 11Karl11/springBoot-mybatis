<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hangz.spring.mybatis.mapper.CityMapper">
  <resultMap id="BaseResultMap" type="com.hangz.spring.mybatis.entity.City">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="city_acronym" jdbcType="VARCHAR" property="cityAcronym" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, city_name, city_acronym, province_id, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from city
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from city
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hangz.spring.mybatis.entity.City" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into city (city_name, city_acronym, province_id, 
      create_time, modify_time)
    values (#{cityName,jdbcType=VARCHAR}, #{cityAcronym,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hangz.spring.mybatis.entity.City" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityName != null and cityName != ''">
        city_name,
      </if>
      <if test="cityAcronym != null and cityAcronym != ''">
        city_acronym,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityName != null and cityName != ''">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="cityAcronym != null and cityAcronym != ''">
        #{cityAcronym,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hangz.spring.mybatis.entity.City">
    <!--@mbg.generated-->
    update city
    <set>
      <if test="cityName != null and cityName != ''">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="cityAcronym != null and cityAcronym != ''">
        city_acronym = #{cityAcronym,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hangz.spring.mybatis.entity.City">
    <!--@mbg.generated-->
    update city
    set city_name = #{cityName,jdbcType=VARCHAR},
      city_acronym = #{cityAcronym,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>